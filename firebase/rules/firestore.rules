rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      allow write: if request.auth != null && request.auth.uid == userId
    	allow read, create: if true;
    }
    match /messages/{messageId} {
      allow create: if isBodyValid() && isToSomeone();
      allow read: if isToAuthUser() || hasReply();
      allow update: if isToAuthUser() && hasReply() == false && isUpdateValid();
      allow delete: if isToAuthUser();

      function isBodyValid() {
        return "body" in request.resource.data && 
          request.resource.data.body is string && 
          request.resource.data.body.size() > 0 &&
          request.resource.data.body.size() < 200
      }

      function isReplyValid() {
        return "reply" in request.resource.data &&
          "body" in request.resource.data.reply &&
          request.resource.data.reply.body is string &&
          request.resource.data.reply.body.size() < 200
      }

      function isToSomeone() {
        return request.resource.data.to != null // chaaaange
      }

      function isToAuthUser() {
        return request.auth.uid == resource.data.to;
      }

      function hasReply() {
        return resource.data.reply != null;
      }

      function isUpdateValid() {
        return request.resource.data.to == resource.data.to &&
          request.resource.data.body == resource.data.body && 
          isReplyValid();
      }
    }
  }
}